<?php
/** @var \Ced\Amazon\Block\Adminhtml\Profile\Ui\Form\AttributeMapping $block */
$_htmlId = 'amazon-attributes';
?>
<?php $_htmlClass = 'amazonAttributesClass'; ?>
<?php $_htmlName = 'amazon_attributes'; ?>
<?php $_readonly = false ?>
<div class="field" id="attribute-<?php /* @escapeNotVerified */echo $_htmlId ?>-container" data-attribute-code="<?php /* @escapeNotVerified */echo $_htmlId ?>">
    <div class="control">
        <table class="admin__control-table tiers_table" id="tiers_table">
            <thead>
            <div>Please map all Amazon attributes with Magento attributes.</div>
            <tr>
                <th class="col-customer-group"><?php /* @escapeNotVerified */
                    echo __('Amazon Attribute') ?></th>
                <th class="col-qty required"><?php /* @escapeNotVerified */
                    echo __('Magento Catalog Attribute') ?></th>
                <th class="col-qty required"><?php /* @escapeNotVerified */ echo __('Default Value') ?></th>
                <th class="col-delete"><?php /* @escapeNotVerified */
                    echo __('Action') ?></th>
            </tr>
            </thead>
            <tbody id="<?php /* @escapeNotVerified */
            echo $_htmlId ?>_container"></tbody>
            <tfoot>
            <tr>
                <td colspan="5" class="col-actions-add"><?php echo $block->getAddButtonHtml() ?></td>
            </tr>
            </tfoot>
        </table>

        <script>
            require([
                'mage/template',
                "prototype",
                "mage/adminhtml/form"
            ], function (mageTemplate) {

//<![CDATA[
                var requiredAttributeRowTemplate = '<tr>'
                    + '<input data-form-part="amazon_profile_form" type="hidden" name="<?php echo $_htmlName ?>[<%- data.index %>][name]" id="amazon_attribute_row_<%- data.index %>_name" />'
                    + '<input data-form-part="amazon_profile_form" type="hidden" name="<?php echo $_htmlName ?>[<%- data.index %>][value]" id="amazon_attribute_row_<%- data.index %>_value" />'
                    + '<input data-form-part="amazon_profile_form" type="hidden" name="<?php echo $_htmlName ?>[<%- data.index %>][minOccurs]" id="amazon_attribute_row_<%- data.index %>_min_occurs" />'
                    + '<input data-form-part="amazon_profile_form" type="hidden" name="<?php echo $_htmlName ?>[<%- data.index %>][input_type]" id="amazon_attribute_row_<%- data.index %>_input_type" />'
                    + '<input data-form-part="amazon_profile_form" type="hidden" name="<?php echo $_htmlName ?>[<%- data.index %>][restriction][optionValues]" id="amazon_attribute_row_<%- data.index %>_option_values" />'
                    + '<td><select data-form-part="amazon_profile_form" style="margin-left: 10px;" onchange="return amazonAttributeControl.setAmazonValues(this, <%- data.index %>);" class="<?php echo $_htmlClass ?> custgroup required-entry" name="<?php echo $_htmlName ?>[<%- data.index %>][value]" id="amazon_attribute_row_<%- data.index %>_amazon_attribute">'

                    <?php foreach ($block->getAmazonAttributes() as $optGroup) {
                    $disable = '';
                    if ($optGroup['label'] == 'Required Attributes') {
                        $disable = 'disabled="disabled"';
                    }
                    ?>
                    + '<optgroup <?php echo $disable ?> label="<?php echo $optGroup['label'] ?> ">'
                    <?php
                    foreach ($optGroup['value'] as $id => $attribute):
                        $label = $block->getAttributeName($attribute);
                    ?>
                    + '<option value="<?=  $block->escapeHtml($id)  ?>" minOccurs="<?= $block->escapeHtml($attribute['minOccurs']) ?>" optionValues=\'<?= $block->escapeHtml(json_encode($block->getAttributeOptions($attribute))) ?>\' input_type="<?= $block->escapeHtml($block->getAttributeType($attribute)) ?>"><?= $block->escapeHtml(__($label)) ?></option>'
                    <?php endforeach
                    ?>
                    + '</optgroup>'
                    <?php  }
                    ?>
                    + '</select></td>'
                    + '<td> <select data-form-part="amazon_profile_form" class="<?php echo $_htmlClass ?> required_magento_attribute required-entry" name="<?php echo $_htmlName ?>[<%- data.index %>][magento_attribute_code]" id="amazon_attribute_row_<%- data.index %>_magento_attribute">'
                    <?php foreach ($block->getMagentoAttributes() as $_groupId=>$_groupName): ?>
                    + "<option value='<?php echo $_groupId ?>' ><?php echo __(addslashes($_groupName)) ?></option>"
                    <?php endforeach ?>
                    + '</select>'
                    + ' </td>'
                    + '<td><input data-form-part="amazon_profile_form"  class="default-text" style="display:none; width: 100%" type="text" name="<?php /* @escapeNotVerified */ echo $_htmlName ?>[<%- data.index %>][default_value]" value="" id="amazon_attribute_row_<%- data.index %>_default_text" />'
                    + '<select data-form-part="amazon_profile_form" style="display:none; width: 100%" class="<?php echo $_htmlClass ?> required_magento_attribute default-select" name="<?php echo $_htmlName ?>[<%- data.index %>][default_value]" id="amazon_attribute_row_<%- data.index %>_default_select">'
                    + '</select></td>'
                    + '<td class="col-delete"><input type="hidden" name="<?php /* @escapeNotVerified */ echo $_htmlName ?>[<%- data.index %>][delete]" class="delete" value="" id="amazon_attribute_row_<%- data.index %>_delete" />'
                    + '<button title="<?php /* @escapeNotVerified */ echo $block->escapeHtml(__('Delete Tier')); ?>" type="button" class="action- scalable delete icon-btn delete-product-option" id="amazon_attribute_row_<%- data.index %>_delete_button" onclick="return amazonAttributeControl.deleteItem(event);">'
                    + '<span><?php /* @escapeNotVerified */ echo __("Delete") ?></span></button></td>'
                    + '</tr>';

                var amazonAttributeControl = {
                    template: mageTemplate(requiredAttributeRowTemplate),
                    itemsCount: 0,
                    addItem: function () {
                        <?php if ($_readonly): ?>
                        if (arguments.length < 4) {
                            return;
                        }
                        <?php endif; ?>
                        var data = {
                            amazon_attribute: '',
                            amazon_attribute_name: '',
                            magento_attribute: '',
                            minOccurs: '',
                            input_type: '',
                            optionValues: '',
                            default_value: '',
                            index: this.itemsCount++
                        };

                        if (arguments.length >= 4) {
                            data.amazon_attribute = arguments[0];
                            data.amazon_attribute_name = arguments[1];
                            data.magento_attribute = arguments[2];
                            data.minOccurs = arguments[3];
                            data.input_type = arguments[4];
                            data.optionValues = arguments[5];
                            data.default_value = arguments[6];
                        }
                        Element.insert($('<?php /* @escapeNotVerified */ echo $_htmlId ?>_container'), {
                            bottom: this.template({
                                data: data
                            })
                        });

                        var amazonAttribute = $('amazon_attribute_row_' + data.index + '_amazon_attribute');
                        var magentoAttribute = $('amazon_attribute_row_' + data.index + '_magento_attribute');

                        amazonAttribute.value = data.amazon_attribute;
                        magentoAttribute.value = data.magento_attribute;

                        if (data.amazon_attribute === "SKU" && data.magento_attribute === "sku") {
                            // Restricting the SKU attribute mapping change.
                            this.disableElement(magentoAttribute);
                        }

                        $('amazon_attribute_row_' + data.index + '_min_occurs').value = data.minOccurs;
                        $('amazon_attribute_row_' + data.index + '_input_type').value = data.input_type;
                        $('amazon_attribute_row_' + data.index + '_option_values').value = data.optionValues;
                        $('amazon_attribute_row_' + data.index + '_name').value = data.amazon_attribute_name;

                        if (data.minOccurs == 1) {
                            $('amazon_attribute_row_' + data.index + '_delete_button').remove();
                            amazonAttribute.disabled = true;
                            $('amazon_attribute_row_' + data.index + '_value').value =
                                data.amazon_attribute;
                            amazonAttribute.removeClassName('required-entry');
                        }

                        if (data.readOnly == '1') {
                            ['website', 'cust_group', 'qty', 'price', 'delete'].each(function (idx) {
                                $('amazon_attribute_row_' + data.index + '_' + idx).disabled = true;
                            });
                            $('amazon_attribute_row_' + data.index + '_delete_button').hide();
                        }

                        <?php if ($_readonly): ?>
                        $('<?php /* @escapeNotVerified */ echo $_htmlId ?>_container').select('input', 'select').each(this.disableElement);
                        $('<?php /* @escapeNotVerified */ echo $_htmlId ?>_container').up('table').select('button').each(this.disableElement);
                        <?php else: ?>
                        $('<?php /* @escapeNotVerified */ echo $_htmlId ?>_container').select('input', 'select').each(function (el) {
                            Event.observe(el, 'change', el.setHasChanges.bind(el));
                        });
                        <?php endif; ?>

                        var text = $('amazon_attribute_row_'+data.index+'_default_text');
                        var select = $('amazon_attribute_row_'+data.index+'_default_select');
                        amazonAttributeControl.showDefault(data.index);
                        if (data.default_value !== '') {
                            select.value = data.default_value;
                            text.value = data.default_value;
                        }
                    },
                    disableElement: function (el) {
                        el.disabled = true;
                        el.addClassName('disabled');
                    },
                    deleteItem: function (event) {
                        var tr = Event.findElement(event, 'tr');
                        if (tr) {
                            Element.remove(tr);
                            // Hiding allows validations enabled.
                            /*Element.select(tr, '.delete').each(function (elem) {
                                elem.value = '1'
                            });
                            Element.select(tr, ['input', 'select']).each(function (elem) {
                                elem.hide()
                            });
                            Element.hide(tr);
                            Element.addClassName(tr, 'no-display template');*/
                        }
                        return false;
                    },
                    setAmazonValues: function (e, index) {
                        if (e.__proto__.hasOwnProperty('selectedIndex')) {
                            var attribute = e.options[e.selectedIndex];
                            var minOccurs = attribute.getAttribute('minOccurs') != null ? attribute.getAttribute('minOccurs') : '0';
                            var name = attribute.text;
                            var input_type = attribute.getAttribute('input_type') != null ? attribute.getAttribute('input_type') : 'text';
                            var options = attribute.getAttribute('optionValues') != null ? attribute.getAttribute('optionValues') : '[]';
                            $('amazon_attribute_row_' + index + '_name').value = name;
                            $('amazon_attribute_row_' + index + '_min_occurs').value = minOccurs;
                            $('amazon_attribute_row_' + index + '_input_type').value = input_type;
                            $('amazon_attribute_row_' + index + '_option_values').value = options;
                            // Updating default
                            this.showDefault(index);
                        }
                    },
                    showDefault: function (index) {
                        var type = 'text';
                        var amazonAttribute = $('amazon_attribute_row_' + index + '_amazon_attribute');
                        var amazonAttributeOptions = "";
                        if (amazonAttribute.selectedIndex >= 0) {
                            amazonAttributeOptions = amazonAttribute.options[amazonAttribute.selectedIndex]
                                .getAttribute('optionValues');
                            type = amazonAttribute.options[amazonAttribute.selectedIndex]
                                .getAttribute('input_type');
                        }

                        var select = $('amazon_attribute_row_' + index + '_default_select');
                        var text = $('amazon_attribute_row_' + index + '_default_text');
                        if (amazonAttributeOptions !== "" && (type === "select")) {
                            amazonAttributeOptions = JSON.parse(amazonAttributeOptions);
                            if (amazonAttributeOptions !== null && Object.keys(amazonAttributeOptions).length > 0) {
                                // removing all options
                                while (select.options.length > 0) {
                                    select.remove(0);
                                }

                                // add blank option
                                select.insert(new Element('option', {"value": ''}).update(' '));

                                // adding all options
                                for (var i = 0; i < Object.keys(amazonAttributeOptions).length; i++) {
                                    select.insert(new Element('option', {"value": amazonAttributeOptions[i]})
                                        .update(amazonAttributeOptions[i]));
                                }

                                select.setAttribute('data-form-part', 'amazon_profile_form');
                                select.enable();
                                select.show();
                                text.setAttribute('data-form-part', '');
                                text.disable();
                                text.hide();
                            } else {
                                select.setAttribute('data-form-part', '');
                                select.disable();
                                select.hide();

                                text.setAttribute('data-form-part', 'amazon_profile_form');
                                text.enable();
                                text.show();
                            }
                        } else {
                            select.setAttribute('data-form-part', '');
                            select.disable();
                            select.hide();

                            if (type === "numeric") {
                                text.setAttribute('type', 'number');
                            } else if (type === "date") {
                                text.setAttribute('type', 'date');
                            } else {
                                text.setAttribute('type', 'text');
                            }
                            text.setAttribute('data-form-part', 'amazon_profile_form');
                            text.enable();
                            text.show();
                        }
                    },
                };
                <?php if (count($block->getMappedAttribute()) > 0 )
                foreach ($block->getMappedAttribute() as $id => $attribute):
                    $value = $id;
                    $name = $block->getAttributeName($attribute);
                    $code = isset($attribute['magento_attribute_code']) ? $attribute['magento_attribute_code'] : "";
                    $mandatory = isset($attribute['minOccurs']) ? $attribute['minOccurs'] : "0";
                    $type = $block->getAttributeType($attribute);
                    $options = json_encode($block->getAttributeOptions($attribute));
                    $default = isset($attribute['default_value']) ? $attribute['default_value'] : "";
                ?>

                amazonAttributeControl.addItem(
                    '<?= $block->escapeHtml($value) ?>',
                    '<?= $block->escapeHtml($name) ?>',
                    '<?= $block->escapeHtml($code)?>',
                    '<?= $block->escapeHtml($mandatory) ?>',
                    '<?= $block->escapeHtml($type) ?>',
                    '<?= $block->escapeHtml($options) ?>',
                    '<?= $block->escapeHtml($default) ?>'
                );

                <?php endforeach; ?>

                <?php if ($_readonly): ?>

                $('<?php /* @escapeNotVerified */ echo $_htmlId ?>_container').up('table').select('button')
                    .each(amazonAttributeControl.disableElement);
                <?php endif; ?>

                window.amazonAttributeControl = amazonAttributeControl;
//]]>
            });
        </script>

    </div>
</div>